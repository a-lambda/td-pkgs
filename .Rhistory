git log
reticulate::repl_python()
a = [10, 11, 23]
print(a)
exit
clear
cls
getwd()
fusen::create_fusen(path = "../squirrels", template = "minimal", flat_name = "first")
library(dplyr)
uber_select <- function(tbl ,col) {}
uber_select <- function(tbl ,col) {
tbl |> select(col)
}
uber_select(tbl = starwars, col = species)
uber_select <- function(tbl ,col) {
tbl |> dplyr::select(col)
}
uber_select(tbl = starwars, col = species)
starwars
uber_select <- function(tbl ,col) {
tbl |> dplyr::select({{col}})
}
uber_select(tbl = starwars, col = species)
uber_select
uber_select <- function(tbl ,col) {
tbl %>% dplyr::select(col) }
uber_select(tbl = starwars, col = species)
uber_select <- function(tbl ,col) {
tbl %>% dplyr::select({{col}}) }
uber_select(tbl = starwars, col = species)
what = "bebe,chats"
url <- sprintf( "http://www.photos-animaux.com/photos,%s.html", what )
url
libraryu(rvest)
library(rvest)
library(xml2)
read_html(url)
read_html(url) %>%
html_node("li.page")
read_html(url) %>%
html_node("li.page") %>%
html_text()
read_html(url) %>%
html_node("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .)
read_html(url) %>%
html_node("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
?html_node
read_html(url) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
?html_text
?html_element
html <- minimal_html("
<h1>This is a heading</h1>
<p id='first'>This is a paragraph</p>
<p class='important'>This is an important paragraph</p>
")
read_html(html) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
what = "chiens"
url <- sprintf( "http://www.photos-animaux.com/photos,%s.html", what )
read_html(html) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
read_html(url) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
read_html(url) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^Page ([[:digit:]]+).*", "\\1", .) %>%
# gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
scrap <- function(page = 1, what = "bebe,chats" ){
url <- sprintf( "http://www.photos-animaux.com/photos,%s;%d.html", what, page )
read_html(url) %>%
html_nodes( "._image img" ) %>%
html_attr("src")
}
scrap
page = 1
what = "bebe,chats" ){
page = 1
what = "bebe,chats"
url <- sprintf( "http://www.photos-animaux.com/photos,%s;%d.html", what, page )
read_html(url) %>%
html_nodes( "._image img" ) %>%
html_attr("src")
seq_len(10)
?missing
?flatten_chr
?html_node
npages <- function( what = "bebe,chats" ){
url <- sprintf( "http://www.photos-animaux.com/photos,%s.html", what )
read_html(url) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
}
npages()
?read_html
?html_text
?gsub
scrap <- function(page = 1, what = "bebe,chats" ){
url <- sprintf( "http://www.photos-animaux.com/photos,%s;%d.html", what, page )
read_html(url) %>%
html_element( "._image img" ) %>%
html_attr("src")
}
scrap()
scrap(page = 2)
scrap(page = 4)
?flatten_chr
?list_flatten
scrap_animals <- function(what = "bebe,chats", pages ){
if(missing(pages)){
pages <- seq_len(npages(what))
}
pages %>%
map( scrap, what = what) %>%
flatten_chr()
}
scrap_animals(pages = 1:2)
library(purrr)
scrap_animals(pages = 1:2)
scrap_animals <- function(what = "bebe,chats", pages ){
if(missing(pages)){
pages <- seq_len(npages(what))
}
pages %>%
map( scrap, what = what) %>%
list_flatten()
}
scrap_animals(pages = 1:2)
scrap_animals <- function(what = "bebe,chats", pages ){
if(missing(pages)){
pages <- seq_len(npages(what))
}
pages %>%
map( scrap, what = what)
}
scrap_animals(pages = 1:2)
l <- scrap_animals(pages = 1:2)
l
unlist(l)
scrap_animals <- function(what = "bebe,chats", pages ){
if(missing(pages)){
pages <- seq_len(npages(what))
}
pages %>%
map( scrap, what = what) %>%
unlist()
}
scrap_animals(pages = 1:2)
?on.exit
?tiles
library(magick)
?image_read
?image_info
?image_crop
s <- "CN=G115904-E-PROWEB,OU=Partages,OU=Utilisateurs,OU=115904-CPAM Flandres,OU=Assurance Maladie,DC=cnamts,DC=local"
gsub(s, "OU")
gsub
?gsub
gsub("OU", s)
grep(pattern = "OU", s)
npages <- function( what = "bebe,chats" ){
url <- sprintf( "http://www.photos-animaux.com/photos,%s.html", what )
read_html(url) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([:digit:]+)$", "\\1", .) %>%
as.numeric
}
npages
npages()
npages <- function( what = "bebe,chats" ){
url <- sprintf( "http://www.photos-animaux.com/photos,%s.html", what )
read_html(url) %>%
html_element("li.page") %>%
html_text() %>%
gsub( "^.* ([[:digit:]]+)$", "\\1", .) %>%
as.numeric
}
npages()
library(igraph)
library(readr)
X594_all_groups <- read_delim(
"data-raw/594_all_groups.csv",
delim = ";",
escape_double = FALSE,
trim_ws = TRUE)
View(X594_all_groups)
security_groups <- X594_all_groups |>
filter(GroupCategory == "Security")
security_groups <- X594_all_groups |>
dplyr::filter(GroupCategory == "Security")
View(security_groups)
dn_groups <- security_groups |>
select(distinguishedName)
dn_groups <- security_groups |>
dplyr::select(distinguishedName)
View(dn_groups)
g <- graph_from_data_frame(dn_groups)
str_split(s, ",")
library(stringr)
str_split(s, ",")
str_split(s, ",")[[1]]
df <- dataframe(x = c("1","2","3"))
df <- data.frame(x = c("1","2","3"))
df
git branch
list.files(".")
file.size("./_quarto.yml")
l1 <- list.files
l1 |> map(file.size)
l1 |> purrr::map(file.size)
l1 <- list.files(".")
l1 |> purrr::map(file.size)
l1 |> purrr::map(\(x) = function(file.size(x)))
l1 |> purrr::map(\(x) {file.size(x)})
l1 |> purrr::map(\(x) {file.size(x)}) |>  unlist
l1 |> purrr::map(\(x) {file.size(x)}) |>  unlist()
l1
tailes <- l1 |> purrr::map(\(x) {file.size(x)}) |>  unlist()
df <- data.frame(l1, tailes)
df
df |>  filter(tailes > 1000)
df |>  dplyr::filter(tailes > 1000)
df |>  dplyr::filter(tailes > 1000) |> arrange(desc(tailes))
df |>  dplyr::filter(tailes > 1000) |> dplyr::arrange(desc(tailes))
df |>  dplyr::filter(tailes > 1000) |> dplyr::arrange(desc(tailes)) |> select(l1)
df |>  dplyr::filter(tailes > 1000) |> dplyr::arrange(desc(tailes)) |> dplyr::select(l1)
lapply(l1, file.size(x))
lapply(l1, file.size)
lapply(l1, file.size) |> unlist()
